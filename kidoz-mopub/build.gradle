apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 13
        versionName "1.3"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('com.mopub:mopub-sdk:4.9.0@aar') {
            transitive = true
    }

    compile 'com.kidoz.sdk:KidozSDK:0.8.8.4@aar'

}
task deleteJarDebug(type: Delete) {
    delete 'outputs/jar/kidoz-mopub-debug.jar'
}

task createJarDebug(type: Copy) {
    from('build/intermediates/bundles/debug/')
    into('build/outputs/jar')
    include('classes.jar')
    rename('classes.jar', 'kidoz-mopub-debug.jar')
}


createJarDebug.dependsOn(deleteJarDebug)

//execute debug Jar creation after last build task
tasks.whenTaskAdded { task ->
    if (task.name == 'bundleDebug') {
        task.finalizedBy createJarDebug
    }
}

// delete & recreate release Jar
task deleteJarRelease(type: Delete) {
    delete 'outputs/jar/kidoz-mopub-release.jar'
}

task createJarRelease(type: Copy) {
    from('build/intermediates/bundles/default/')
    //not clear why under this project 'release' folder is called 'default'
    into('build/outputs/jar')
    include('classes.jar')
    rename('classes.jar', 'kidoz-mopub-release.jar')
}

//execute debug Jar creation after last build task
tasks.whenTaskAdded { task ->
    if (task.name == 'bundleRelease') {
        task.finalizedBy createJarRelease
    }

}